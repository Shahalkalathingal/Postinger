[{"/home/user/web/projects/A-mern-tube/client/src/index.js":"1","/home/user/web/projects/A-mern-tube/client/src/App.js":"2","/home/user/web/projects/A-mern-tube/client/src/main/contexts/UserContext.js":"3","/home/user/web/projects/A-mern-tube/client/src/main/serverUrl.js":"4","/home/user/web/projects/A-mern-tube/client/src/main/components/NavBar/NavBar.js":"5","/home/user/web/projects/A-mern-tube/client/src/main/components/auth/Register.js":"6","/home/user/web/projects/A-mern-tube/client/src/main/components/auth/Login.js":"7","/home/user/web/projects/A-mern-tube/client/src/main/components/Profile/Profile.js":"8","/home/user/web/projects/A-mern-tube/client/src/main/components/Posts/All/AllPosts.js":"9","/home/user/web/projects/A-mern-tube/client/src/main/components/Posts/All/Post.js":"10","/home/user/web/projects/A-mern-tube/client/src/main/components/Posts/New/NewPost.js":"11","/home/user/web/projects/A-mern-tube/client/src/main/components/Posts/All/Like.js":"12","/home/user/web/projects/A-mern-tube/client/src/main/components/Posts/All/Comments.js":"13","/home/user/web/projects/A-mern-tube/client/src/main/components/Posts/Follow/Follow.js":"14","/home/user/web/projects/A-mern-tube/client/src/main/components/Posts/All/SingleComment.js":"15","/home/user/web/projects/A-mern-tube/client/src/main/components/Profile/Details.js":"16","/home/user/web/projects/A-mern-tube/client/src/main/components/Profile/Edit.js":"17","/home/user/web/projects/A-mern-tube/client/src/main/components/Profile/Posts.js":"18","/home/user/web/projects/A-mern-tube/client/src/main/contexts/LoadContext.js":"19","/home/user/web/projects/A-mern-tube/client/src/main/components/Posts/Follow/Followings.js":"20","/home/user/web/projects/A-mern-tube/client/src/main/components/Profile/Settings.js":"21"},{"size":156,"mtime":1610361160228,"results":"22","hashOfConfig":"23"},{"size":8855,"mtime":1626504208178,"results":"24","hashOfConfig":"23"},{"size":71,"mtime":1609569222436,"results":"25","hashOfConfig":"23"},{"size":71,"mtime":1626509401083,"results":"26","hashOfConfig":"23"},{"size":2869,"mtime":1626504165370,"results":"27","hashOfConfig":"23"},{"size":3869,"mtime":1610468591255,"results":"28","hashOfConfig":"23"},{"size":2593,"mtime":1610459192235,"results":"29","hashOfConfig":"23"},{"size":11223,"mtime":1626504375342,"results":"30","hashOfConfig":"23"},{"size":11992,"mtime":1626503302122,"results":"31","hashOfConfig":"23"},{"size":10574,"mtime":1626503930754,"results":"32","hashOfConfig":"23"},{"size":3912,"mtime":1610451970379,"results":"33","hashOfConfig":"23"},{"size":3366,"mtime":1610461998331,"results":"34","hashOfConfig":"23"},{"size":2166,"mtime":1610521589135,"results":"35","hashOfConfig":"23"},{"size":3815,"mtime":1610462874879,"results":"36","hashOfConfig":"23"},{"size":1613,"mtime":1610458848611,"results":"37","hashOfConfig":"23"},{"size":5984,"mtime":1610463886959,"results":"38","hashOfConfig":"23"},{"size":4684,"mtime":1610469864839,"results":"39","hashOfConfig":"23"},{"size":1647,"mtime":1610514103359,"results":"40","hashOfConfig":"23"},{"size":71,"mtime":1610360946345,"results":"41","hashOfConfig":"23"},{"size":8579,"mtime":1626503918850,"results":"42","hashOfConfig":"23"},{"size":12870,"mtime":1626503894162,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"19onyz9",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"46"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"46"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"46"},"/home/user/web/projects/A-mern-tube/client/src/index.js",[],["101","102"],"/home/user/web/projects/A-mern-tube/client/src/App.js",[],"/home/user/web/projects/A-mern-tube/client/src/main/contexts/UserContext.js",[],"/home/user/web/projects/A-mern-tube/client/src/main/serverUrl.js",[],"/home/user/web/projects/A-mern-tube/client/src/main/components/NavBar/NavBar.js",[],"/home/user/web/projects/A-mern-tube/client/src/main/components/auth/Register.js",["103"],"import React, { useEffect, useState } from \"react\";\nimport { useContext } from \"react\";\nimport UserContext from \"../../contexts/UserContext\";\nimport url from \"../../serverUrl\";\nimport Axios from \"axios\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport M from \"materialize-css\";\nimport LoadContext from \"../../contexts/LoadContext\";\n\nfunction Register() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [con_password, setConfirm_password] = useState(\"\");\n\n  const { setuserData, userData } = useContext(UserContext);\n  const { setLoad } = useContext(LoadContext);\n  const history = useHistory();\n\n  const SubmitHandle = async (e) => {\n    try {\n      e.preventDefault();\n      const response = await Axios.post(`${url}/auth/register`, {\n        email,\n        password,\n        name,\n        username,\n        con_password,\n      });\n      setuserData({\n        user: response.data.user,\n        token: response.data.token,\n      });\n      localStorage.setItem(\"USER_TOKEN\", response.data.token);\n      M.toast({ html: \"Your account was created\", classes: \"green\" });\n      M.toast({\n        html: `Shahal, Thank you ${name} for joining to us`,\n        classes: \"green\",\n      });\n      history.push(\"/\");\n    } catch (err) {\n      if(err && err.response && err.response.data && err.response.data.msg){\n\n        return M.toast({ html: err.response.data.msg, classes: \"red\" });\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (userData.user) {\n      history.push(\"/\");\n    }\n  }, []);\n  setLoad(100);\n  return (\n    <div >\n      <blockquote>\n        <p>Create new account</p>\n      </blockquote>\n      <form>\n        <div className=\"input-field col s12 l6\">\n          <input\n            type=\"text\"\n            id=\"Name\"\n            value={name}\n            className=\"validate\"\n            onChange={(e) => setName(e.target.value)}\n          />\n          <label htmlFor=\"Name\">Full Name</label>\n        </div>\n        <div className=\"input-field col s12 l6\">\n          <input\n            type=\"text\"\n            id=\"username\"\n            value={username}\n            className=\"validate\"\n            maxLength=\"19\"\n            onChange={(e) => setUsername(e.target.value)}\n          />\n          <label htmlFor=\"username\">username</label>\n        </div>\n        <div className=\"input-field col s12\">\n          <input\n            type=\"email\"\n            id=\"email\"\n            className=\"validate\"\n            onChange={(e) => setEmail(e.target.value)}\n            value={email}\n          />\n          <label htmlFor=\"email\" data-error=\"wrong\" data-success=\"right\">\n            Email\n          </label>\n        </div>\n        <div className=\"input-field col s12\">\n          <input\n            type=\"password\"\n            id=\"Password\"\n            className=\"validate\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <label htmlFor=\"Password\" data-error=\"wrong\" data-success=\"right\">\n            Password\n          </label>\n        </div>\n        <div className=\"input-field col s12\">\n          <input\n            type=\"password\"\n            id=\"con_password\"\n            value={con_password}\n            className=\"validate\"\n            onChange={(e) => setConfirm_password(e.target.value)}\n          />\n          <label htmlFor=\"con_password\" data-error=\"wrong\" data-success=\"right\">\n            Confirm Password\n          </label>\n        </div>\n        <button\n          className=\"btn blue\"\n          onClick={SubmitHandle}\n          name=\"action\"\n        >\n          Create Account\n        </button>\n        <br />\n        <br />\n        Already have an account ? <Link to=\"/login\">Login</Link>\n      </form>\n    </div>\n  );\n}\n\nexport default Register;\n","/home/user/web/projects/A-mern-tube/client/src/main/components/auth/Login.js",["104"],"import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useContext } from \"react\";\nimport UserContext from \"../../contexts/UserContext\";\nimport url from \"../../serverUrl\";\nimport M from \"materialize-css\";\nimport LoadContext from \"../../contexts/LoadContext\";\nfunction Login() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const history = useHistory();\n\n  const { setLoad } = useContext(LoadContext);\n\n  const { setuserData, userData } = useContext(UserContext);\n  const SubmitHandle = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(`${url}/auth/login`, {\n        email,\n        password,\n      });\n      setuserData({\n        user: response.data.user,\n        token: response.data.token,\n      });\n      localStorage.setItem(\"USER_TOKEN\", response.data.token);\n\n      M.toast({ html: `You are now logged in`, classes: \"green\" });\n      M.toast({\n        html: `Shahal, Hai ${response.data.user.name}`,\n        classes: \"green\",\n      });\n\n      history.push(\"/\");\n    } catch (err) {\n      M.toast({ html: err.response.data.msg, classes: \"red\" });\n    }\n  };\n  useEffect(() => {\n    if (userData.user) {\n      history.push(\"/\");\n    }\n  }, []);\n  setLoad(100);\n  return (\n    <div>\n      <blockquote>\n        <p>Login</p>\n      </blockquote>\n      <div>\n        <form>\n          <div className=\"input-field col s12\">\n            <input\n              type=\"text\"\n              id=\"email\"\n              className=\"validate\"\n              onChange={(e) => setEmail(e.target.value)}\n              value={email}\n            />\n            <label htmlFor=\"email\" data-error=\"wrong\" data-success=\"right\">\n              Username or Email\n            </label>\n          </div>\n          <div className=\"input-field col s12\">\n            <input\n              type=\"password\"\n              id=\"Password\"\n              className=\"validate\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <label htmlFor=\"Password\" data-error=\"wrong\" data-success=\"right\">\n              Password\n            </label>\n          </div>\n          <button\n            className=\"btn blue\"\n            onClick={SubmitHandle}\n            name=\"action\"\n          >\n            Login\n          </button>\n          <br />\n          <br />\n          Don't have an account ? <Link to=\"/register\">Create account</Link>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","/home/user/web/projects/A-mern-tube/client/src/main/components/Profile/Profile.js",["105","106","107"],"import axios from \"axios\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport UserContext from \"../../contexts/UserContext\";\nimport url from \"../../serverUrl\";\nimport Follow from \"../Posts/Follow/Follow\";\nimport M from \"materialize-css\";\nimport Edit from \"./Edit\";\nimport Details from \"./Details\";\nimport Posts from \"./Posts\";\nimport LoadContext from \"../../contexts/LoadContext\";\n\nfunction Profile() {\n  const views = {\n    edit: 1,\n    details: 2,\n    posts: 3,\n  };\n  const { userData } = useContext(UserContext);\n  const { setLoad } = useContext(LoadContext);\n  const [user, setUser] = useState({});\n  const [posts, setPosts] = useState(false);\n  const [Views, setViews] = useState(2);\n\n  const params = useParams();\n  useEffect(() => {\n    const getUserData = async () => {\n      try {\n        let User\n        if(userData.user._id){\n           User = await axios.get(`${url}/profile/getUser/${userData.user._id}`);\n        }else{\n          User = await axios.get(`${url}/profile/getUser/${params.id}`);\n        }\n        setUser(User.data.user);\n        setPosts(User.data.posts);\n      } catch (error) {\n        setUser(null);\n        throw error;\n      }\n    };\n\n    getUserData();\n  }, []);\n  if ((user === null) | (posts === null)) {\n    setLoad(100)\n    return (\n      <React.Fragment>\n        <div className=\"center\" >\n          <h5>Profile not found</h5>\n          <br />\n          <Link to=\"/\" className=\"btn\">\n            Go to Home\n          </Link>\n        </div>\n      </React.Fragment>\n    );\n  } else {\n    if (user._id && posts) {\n      setLoad(100);\n      return (\n        <div >\n          {userData.user._id === user._id \n          ? <blockquote>\n          <p>My Profile</p>\n        </blockquote>\n        :\n        <blockquote>\n        <p>{user.username}</p>\n      </blockquote>\n          }\n\n\n         \n          {userData.user._id === user._id ? (\n            // If the profile is mine\n            <div className=\"collection\">\n              <Link\n                to=\"#\"\n                onClick={() => {\n                  setViews(views.details);\n                }}\n                className={\n                  Views === 2 ? `collection-item active` : \"collection-item\"\n                }\n              >\n                Profile\n              </Link>\n\n              <Link\n                to=\"#\"\n                onClick={() => {\n                  setViews(views.edit);\n                }}\n                className={\n                  Views === 1 ? `collection-item active` : \"collection-item\"\n                }\n              >\n                Edit\n              </Link>\n             \n              <Link\n                to=\"#\"\n                onClick={() => {\n                  setViews(views.posts);\n                }}\n                className={\n                  Views === 3 ? `collection-item active` : \"collection-item\"\n                }\n              >\n                My posts\n              </Link>\n              \n            </div>\n          ) : (\n            // If the profile is not mine\n            <div className=\"collection\">\n              <Link\n                to=\"#\"\n                onClick={() => {\n                  setViews(views.details);\n                }}\n                className={\n                  Views === 2 ? `collection-item active` : \"collection-item\"\n                }\n              >\n                Profile\n              </Link>\n              {user.privacy === 0 && (\n\n              <Link\n                to=\"#\"\n                onClick={() => {\n                  setViews(views.posts);\n                }}\n                className={\n                  Views === 3 ? `collection-item active` : \"collection-item\"\n                }\n              >\n                Posts\n              </Link>\n              )}\n            </div>\n          )}\n\n          {Views === 1 && <Edit user={user} />}\n\n          {Views === 2 && <Details user={user} postLength={posts.length} />}\n\n          {Views === 3 && <Posts posts={posts} user={user} />}\n        </div>\n      );\n    } else {\n      setLoad(24);\n      return (\n        <div >\n                <div className=\"hide-on-med-and-down preloader-wrapper big active\" style={{ left: \"38rem\", top: '14rem' }}>\n\n                    <div className=\"spinner-layer spinner-blue\">\n                        <div className=\"circle-clipper left\">\n                            <div className=\"circle\"></div>\n                        </div>\n                        <div className=\"gap-patch\">\n                            <div className=\"circle\"></div>\n                        </div>\n                        <div className=\"circle-clipper right\">\n                            <div className=\"circle\"></div>\n                        </div>\n                    </div>\n\n                    <div className=\"spinner-layer spinner-red\">\n                        <div className=\"circle-clipper left\">\n                            <div className=\"circle\"></div>\n                        </div>\n                        <div className=\"gap-patch\">\n                            <div className=\"circle\"></div>\n                        </div>\n                        <div className=\"circle-clipper right\">\n                            <div className=\"circle\"></div>\n                        </div>\n                    </div>\n\n                    <div className=\"spinner-layer spinner-yellow\">\n                        <div className=\"circle-clipper left\">\n                            <div className=\"circle\"></div>\n                        </div>\n                        <div className=\"gap-patch\">\n                            <div className=\"circle\"></div>\n                        </div>\n                        <div className=\"circle-clipper right\">\n                            <div className=\"circle\"></div>\n                        </div>\n                    </div>\n\n                    <div className=\"spinner-layer spinner-green\">\n                        <div className=\"circle-clipper left\">\n                            <div className=\"circle\"></div>\n                        </div>\n                        <div className=\"gap-patch\">\n                            <div className=\"circle\"></div>\n                        </div>\n                        <div className=\"circle-clipper right\">\n                            <div className=\"circle\"></div>\n                        </div>\n                    </div>\n                </div>\n\n                {/** On Meduim */}\n                <div className=\"hide-on-large-only hide-on-small-only  preloader-wrapper big active\" style={{ left: \"24rem\", top: '14rem' }}>\n\n                    <div className=\"spinner-layer spinner-blue\">\n                        <div className=\"circle-clipper left\">\n                            <div className=\"circle\"></div>\n                        </div>\n                        <div className=\"gap-patch\">\n                            <div className=\"circle\"></div>\n                        </div>\n                        <div className=\"circle-clipper right\">\n                            <div className=\"circle\"></div>\n                        </div>\n                    </div>\n\n                    <div className=\"spinner-layer spinner-red\">\n                        <div className=\"circle-clipper left\">\n                            <div className=\"circle\"></div>\n                        </div>\n                        <div className=\"gap-patch\">\n                            <div className=\"circle\"></div>\n                        </div>\n                        <div className=\"circle-clipper right\">\n                            <div className=\"circle\"></div>\n                        </div>\n                    </div>\n\n                    <div className=\"spinner-layer spinner-yellow\">\n                        <div className=\"circle-clipper left\">\n                            <div className=\"circle\"></div>\n                        </div>\n                        <div className=\"gap-patch\">\n                            <div className=\"circle\"></div>\n                        </div>\n                        <div className=\"circle-clipper right\">\n                            <div className=\"circle\"></div>\n                        </div>\n                    </div>\n\n                    <div className=\"spinner-layer spinner-green\">\n                        <div className=\"circle-clipper left\">\n                            <div className=\"circle\"></div>\n                        </div>\n                        <div className=\"gap-patch\">\n                            <div className=\"circle\"></div>\n                        </div>\n                        <div className=\"circle-clipper right\">\n                            <div className=\"circle\"></div>\n                        </div>\n                    </div>\n                </div>\n\n\n                {/** On Small */}\n                <div className=\"hide-on-med-and-up preloader-wrapper big active\" style={{ left: \"9.1rem\", top: \"14rem\" }}>\n\n                    <div className=\"spinner-layer spinner-blue\">\n                        <div className=\"circle-clipper left\">\n                            <div className=\"circle\"></div>\n                        </div>\n                        <div className=\"gap-patch\">\n                            <div className=\"circle\"></div>\n                        </div>\n                        <div className=\"circle-clipper right\">\n                            <div className=\"circle\"></div>\n                        </div>\n                    </div>\n\n                    <div className=\"spinner-layer spinner-red\">\n                        <div className=\"circle-clipper left\">\n                            <div className=\"circle\"></div>\n                        </div>\n                        <div className=\"gap-patch\">\n                            <div className=\"circle\"></div>\n                        </div>\n                        <div className=\"circle-clipper right\">\n                            <div className=\"circle\"></div>\n                        </div>\n                    </div>\n\n                    <div className=\"spinner-layer spinner-yellow\">\n                        <div className=\"circle-clipper left\">\n                            <div className=\"circle\"></div>\n                        </div>\n                        <div className=\"gap-patch\">\n                            <div className=\"circle\"></div>\n                        </div>\n                        <div className=\"circle-clipper right\">\n                            <div className=\"circle\"></div>\n                        </div>\n                    </div>\n\n                    <div className=\"spinner-layer spinner-green\">\n                        <div className=\"circle-clipper left\">\n                            <div className=\"circle\"></div>\n                        </div>\n                        <div className=\"gap-patch\">\n                            <div className=\"circle\"></div>\n                        </div>\n                        <div className=\"circle-clipper right\">\n                            <div className=\"circle\"></div>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n      );\n    }\n  }\n}\n\nexport default Profile;\n","/home/user/web/projects/A-mern-tube/client/src/main/components/Posts/All/AllPosts.js",[],"/home/user/web/projects/A-mern-tube/client/src/main/components/Posts/All/Post.js",["108","109"],"import axios from \"axios\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport url from \"../../../serverUrl\";\nimport Comments from \"./Comments\";\nimport Like from \"./Like\";\nimport M from \"materialize-css\";\nimport UserContext from \"../../../contexts/UserContext\";\nimport moment from \"moment\";\nimport Follow from \"../Follow/Follow\";\nimport LoadContext from \"../../../contexts/LoadContext\";\n\nfunction Post() {\n  const [post, setpost] = useState(false);\n  const [CommentLists, setCommentLists] = useState([]);\n  const history = useHistory();\n\n  const params = useParams();\n  const id = params.id;\n  const { userData } = useContext(UserContext);\n  const { setLoad } = useContext(LoadContext);\n  useEffect(() => {\n    const getOnePost = async () => {\n      try {\n        const Post = await axios.get(`${url}/post/getOne/${id}`);\n        setpost(Post.data.post);\n      } catch (error) {\n        setpost(null);\n      }\n    };\n    const getAllComments = async () => {\n      try {\n        const Comments = await axios.get(`${url}/post/getComments/${id}`);\n        setCommentLists(Comments.data.comments);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getAllComments();\n    getOnePost();\n  }, [id]);\n\n  const updateComment = (newComment) => {\n    setCommentLists(CommentLists.concat(newComment));\n  };\n\n  const deletePost = async () => {\n    if (post.user._id === userData.user._id) {\n      await axios.post(\n        `${url}/post/deletePost`,\n        { _id: post._id, userId: userData.user._id },\n        {\n          headers: { \"SHAHAL-USER_TOKEN\": localStorage.getItem(\"USER_TOKEN\") },\n        },\n      );\n      M.toast({ html: \"Post deleted successfully\", classes: \"green\" });\n      history.push(\"/\");\n    } else {\n      M.toast({ html: \"You can only delete your post\", classes: \"red\" });\n    }\n  };\n\n  if (post === null) {\n    setLoad(100);\n    return (\n      <React.Fragment>\n        <div className=\"center\" style={{ marginTop: \"5rem\" }}>\n          <h5>Post not found</h5>\n          <br />\n          <Link to=\"/\" className=\"btn\">\n            Go to Home\n          </Link>\n        </div>\n      </React.Fragment>\n    );\n  } else {\n    if (post) {\n      setLoad(100);\n      return (\n        <div>\n          {post.user.privacy === 0 || post.user._id === userData.user._id && post.deleted ===  false?\n          <>\n          <div className=\"card home-card center\">\n          <Link to={`/profile/${post.user._id}`}>\n            <img className=\"imghome circle\" src={post.user.image} alt=\"\" />\n            <h4 className=\"a\">{post.user.username}</h4>\n          </Link>\n          <div className=\"card-image\">\n            <img src={post.file} alt=\"Postimg\" style={{ minHeight: '13rem', maxHeight: '46rem' }}/>\n            <span className=\"right\">\n              <strong style={{marginLeft:'-8rem'}}>{moment(post.createdAt).fromNow()}</strong>\n            </span>\n            <Like post postId={post._id} />\n          </div>\n          <div className=\"card-content\">\n            {userData.user._id === post.user._id && (\n              <i\n                className=\"material-icons right\"\n                style={{ color: \"red\", cursor: \"pointer\" }}\n                onClick={deletePost}\n              >\n                delete\n              </i>\n            )}\n            <div className=\"center\">\n              <span>{post.body}</span>\n            </div>\n          </div>\n        </div>\n        {userData.user && userData.user._id === post.user._id && <></>}\n\n        {userData.user._id !== post.user._id && post.user.isAdmin === false && (\n          <Follow post userTo={post.user._id} userFrom={userData.user._id} />\n        )}\n\n        <div class=\"modal\">\n          <div class=\"modal-content\">\n            <h4>Modal Header</h4>\n            <p>A bunch of text</p>\n          </div>\n          <div class=\"modal-footer\">\n            <a\n              href=\"#!\"\n              class=\"modal-close waves-effect waves-green btn-flat\"\n            >\n              Agree\n            </a>\n          </div>\n        </div>\n\n        <Comments\n          postId={post._id}\n          refreshFunction={updateComment}\n          CommentLists={CommentLists}\n        />\n        </>\n        :\n        <React.Fragment>\n        <div className=\"center\" style={{ marginTop: \"5rem\" }}>\n          <h5>This post is private</h5>\n          <br />\n          <Link to=\"/\" className=\"btn\">\n            Go to Home\n          </Link>\n        </div>\n      </React.Fragment>\n        }\n          \n        </div>\n      );\n    } else {\n      setLoad(29);\n      return (\n        <div >\n        <div className=\"hide-on-med-and-down preloader-wrapper big active\" style={{ left: \"38rem\", top: '14rem' }}>\n\n            <div className=\"spinner-layer spinner-blue\">\n                <div className=\"circle-clipper left\">\n                    <div className=\"circle\"></div>\n                </div>\n                <div className=\"gap-patch\">\n                    <div className=\"circle\"></div>\n                </div>\n                <div className=\"circle-clipper right\">\n                    <div className=\"circle\"></div>\n                </div>\n            </div>\n\n            <div className=\"spinner-layer spinner-red\">\n                <div className=\"circle-clipper left\">\n                    <div className=\"circle\"></div>\n                </div>\n                <div className=\"gap-patch\">\n                    <div className=\"circle\"></div>\n                </div>\n                <div className=\"circle-clipper right\">\n                    <div className=\"circle\"></div>\n                </div>\n            </div>\n\n            <div className=\"spinner-layer spinner-yellow\">\n                <div className=\"circle-clipper left\">\n                    <div className=\"circle\"></div>\n                </div>\n                <div className=\"gap-patch\">\n                    <div className=\"circle\"></div>\n                </div>\n                <div className=\"circle-clipper right\">\n                    <div className=\"circle\"></div>\n                </div>\n            </div>\n\n            <div className=\"spinner-layer spinner-green\">\n                <div className=\"circle-clipper left\">\n                    <div className=\"circle\"></div>\n                </div>\n                <div className=\"gap-patch\">\n                    <div className=\"circle\"></div>\n                </div>\n                <div className=\"circle-clipper right\">\n                    <div className=\"circle\"></div>\n                </div>\n            </div>\n        </div>\n\n        {/** On Meduim */}\n        <div className=\"hide-on-large-only hide-on-small-only  preloader-wrapper big active\" style={{ left: \"24rem\", top: '14rem' }}>\n\n            <div className=\"spinner-layer spinner-blue\">\n                <div className=\"circle-clipper left\">\n                    <div className=\"circle\"></div>\n                </div>\n                <div className=\"gap-patch\">\n                    <div className=\"circle\"></div>\n                </div>\n                <div className=\"circle-clipper right\">\n                    <div className=\"circle\"></div>\n                </div>\n            </div>\n\n            <div className=\"spinner-layer spinner-red\">\n                <div className=\"circle-clipper left\">\n                    <div className=\"circle\"></div>\n                </div>\n                <div className=\"gap-patch\">\n                    <div className=\"circle\"></div>\n                </div>\n                <div className=\"circle-clipper right\">\n                    <div className=\"circle\"></div>\n                </div>\n            </div>\n\n            <div className=\"spinner-layer spinner-yellow\">\n                <div className=\"circle-clipper left\">\n                    <div className=\"circle\"></div>\n                </div>\n                <div className=\"gap-patch\">\n                    <div className=\"circle\"></div>\n                </div>\n                <div className=\"circle-clipper right\">\n                    <div className=\"circle\"></div>\n                </div>\n            </div>\n\n            <div className=\"spinner-layer spinner-green\">\n                <div className=\"circle-clipper left\">\n                    <div className=\"circle\"></div>\n                </div>\n                <div className=\"gap-patch\">\n                    <div className=\"circle\"></div>\n                </div>\n                <div className=\"circle-clipper right\">\n                    <div className=\"circle\"></div>\n                </div>\n            </div>\n        </div>\n\n\n        {/** On Small */}\n        <div className=\"hide-on-med-and-up preloader-wrapper big active\" style={{ left: \"9.1rem\", top: \"14rem\" }}>\n\n            <div className=\"spinner-layer spinner-blue\">\n                <div className=\"circle-clipper left\">\n                    <div className=\"circle\"></div>\n                </div>\n                <div className=\"gap-patch\">\n                    <div className=\"circle\"></div>\n                </div>\n                <div className=\"circle-clipper right\">\n                    <div className=\"circle\"></div>\n                </div>\n            </div>\n\n            <div className=\"spinner-layer spinner-red\">\n                <div className=\"circle-clipper left\">\n                    <div className=\"circle\"></div>\n                </div>\n                <div className=\"gap-patch\">\n                    <div className=\"circle\"></div>\n                </div>\n                <div className=\"circle-clipper right\">\n                    <div className=\"circle\"></div>\n                </div>\n            </div>\n\n            <div className=\"spinner-layer spinner-yellow\">\n                <div className=\"circle-clipper left\">\n                    <div className=\"circle\"></div>\n                </div>\n                <div className=\"gap-patch\">\n                    <div className=\"circle\"></div>\n                </div>\n                <div className=\"circle-clipper right\">\n                    <div className=\"circle\"></div>\n                </div>\n            </div>\n\n            <div className=\"spinner-layer spinner-green\">\n                <div className=\"circle-clipper left\">\n                    <div className=\"circle\"></div>\n                </div>\n                <div className=\"gap-patch\">\n                    <div className=\"circle\"></div>\n                </div>\n                <div className=\"circle-clipper right\">\n                    <div className=\"circle\"></div>\n                </div>\n            </div>\n        </div>\n\n    </div>\n      );\n    }\n  }\n}\n\nexport default Post;\n","/home/user/web/projects/A-mern-tube/client/src/main/components/Posts/New/NewPost.js",["110"],"import axios from 'axios'\nimport React, { useContext, useEffect, useState } from 'react'\nimport Dropzone from 'react-dropzone'\nimport { useHistory } from 'react-router-dom'\nimport url from '../../../serverUrl'\nimport UserContext from '../../../contexts/UserContext'\nimport M from 'materialize-css'\nimport LoadContext from '../../../contexts/LoadContext'\nfunction NewPost() {\n    const [PreviewFile, setPreviewFile] = useState(false)\n\nuseEffect(() => {\n    if(!userData.user){\n        return history.push('/login')\n    }\n}, [])\n\n    const [body, setBody] = useState(\"\")\n    const history = useHistory()\n    const onDrop = (e) => {\n        const file = e.target.files[0]\n        previewFile(file)\n    }\n\n    const { userData } = useContext(UserContext)\n    const { setLoad } = useContext(LoadContext)\n\n   \n    const onSubmit = (e) => {\n        e.preventDefault()\n        if(!userData.user){\n            M.toast({html:'Please login',classes:'red'})\n            return history.push('/login')\n        }\n        if (!PreviewFile){\n            return M.toast({html:\"Please upload a image\",classes:'red'})\n        }\n        UploadImage(PreviewFile)\n    }\n\n  \n\n\n    const UploadImage = async (ImageString) => {\n        try {\n            \n            const token = localStorage.getItem('USER_TOKEN')\n            await axios.post(`${url}/post/upload`, { image: ImageString, body }, {\n                headers: { 'SHAHAL-USER_TOKEN': token }\n            })\n            M.toast({ html: \"New Post Created\", classes: 'green' })\n\n            history.push('/')\n\n\n\n        } catch (err) {\n\n            \n                M.toast({ html: err.response.data.msg, classes: 'red' })\n            \n        }\n    }\n\n\n    const previewFile = (file) => {\n        const reader = new FileReader()\n        reader.readAsDataURL(file)\n        reader.onloadend = () => {\n            setPreviewFile(reader.result)\n        }\n    }\n    setLoad(100)\n    return (\n        <div >\n            <blockquote>\n                <p>New Post</p>\n            </blockquote>\n            \n\n            <form onSubmit={onSubmit}>\n        \n\n                \n                <div className=\"input-field col s12 l6\">\n\n                    <Dropzone\n                        multiple={false}\n                        maxSize={80000000}>\n                        {({ getRootProps, getInputProps }) => (\n                            <div style={{ width: '300px', height: '240px', border: '1px solid lightgray', display: 'flex', alignItems: 'center', justifyContent: 'center', background: 'white', cursor: 'pointer' }}\n                                {...getRootProps()}\n\n                            >\n                                <input {...getInputProps()} accept=\"image/*\" onChange={onDrop} />\n\n                                <i style={{fontSize: \"40px\"}}  className=\"material-icons\">add_a_photo</i>\n\n                            </div>\n                        )}\n                    </Dropzone>\n                </div>\n\n                <br />\n\n                {PreviewFile && (\n                    <div className=\"row\">\n                        <div className=\"col s12 m4 l4\" style={{ marginLeft: '-1rem' }}>\n                            <div className=\"card\">\n                                <div className=\"card-image\">\n                                    <img src={PreviewFile} className=\"img-responsive\" alt=\"choosen\" />\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n\n\n                )}\n\n                <div className=\"input-field col s12\">\n                   <input placeholder=\"Type your description\" value={body} onChange={(e)=>setBody(e.target.value)}/>\n                </div>\n\n\n\n\n                <button className=\"btn waves-effect waves-light\" type=\"submit\" name=\"action\">Create\n                </button>\n\n            </form>\n\n\n\n\n        </div>\n\n    )\n}\n\nexport default NewPost\n","/home/user/web/projects/A-mern-tube/client/src/main/components/Posts/All/Like.js",["111","112"],"import axios from 'axios'\nimport React, { useContext, useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport UserContext from '../../../contexts/UserContext'\nimport url from '../../../serverUrl'\nimport M from 'materialize-css'\nimport LoadContext from '../../../contexts/LoadContext'\nfunction Like(props) {\n    const history = useHistory()\n\n    const { userData } = useContext(UserContext)\n    const { setLoad } = useContext(LoadContext)\n    const [likes, setLikes] = useState(0)\n    const [likeAction, setlikeAction] = useState(null)\n\n    let reqBody = {}\n\n\n    if (props.post) {\n        reqBody = {\n            postId: props.postId\n        }\n    } else {\n        reqBody = {\n            commentId: props.commentId\n        }\n    }\n\n\n    \n\n\n\n\n\n\n    useEffect(() => {\n        const getLikes = async () => {\n            try {\n                setLoad(0)\n                const GetLikes = await axios.post(`${url}/likes/getLikes`, reqBody)\n                \n                // Check if already liked or not\n                \n                \n                GetLikes.data.likes.map(like => {\n                    if (like.userId === userData.user._id) {\n                        return setlikeAction(true)\n                    }\n                })\n                \n\n                \n                \n                //likes count\n                \n                setLikes(GetLikes.data.likes.length)\n                setLoad(100)\n                \n            } catch (error) {\n                console.error(error);\n            }\n\n        }\n        getLikes()\n    },[])\n\n\n    const onLike = async () => {\n        if (likeAction) {\n            try {\n                await axios.post(`${url}/likes/unLike`, reqBody, {\n                    headers: { 'SHAHAL-USER_TOKEN': localStorage.getItem('USER_TOKEN') }\n                })\n\n                setLikes(likes - 1)\n                setlikeAction(false)\n\n            } catch (error) {\n\n               if(error.response.data.msg){\n                   return setlikeAction(true)\n               }\n\n\n            }\n        } else {\n            try {\n                await axios.post(`${url}/likes/upLike`, reqBody, {\n                    headers: { 'SHAHAL-USER_TOKEN': localStorage.getItem('USER_TOKEN') }\n                })\n                setLikes(likes + 1)\n                setlikeAction(true)\n\n\n            } catch (error) {\n                console.log(error);\n            }\n\n\n\n        }\n    }\n\n    if (userData.user) {\n\n\n        return (\n            <div>\n            <span><i\n                onClick={onLike}\n                className=\"material-icons left\"\n                style={{ color: \"red\", cursor: 'pointer' }}\n            >{likeAction ? <>favorite</> : <>favorite_border</>}</i><span className=\"left\" style={{marginLeft:'-.7rem'}}>{likes}</span></span><br />\n               \n            </div>\n        )\n\n    } else {\n        return (\n            <div>\n            <i\n                onClick={()=>M.toast({html:'Please login',classes:'red'}) && history.push('/login')}\n                className=\"material-icons left\"\n                style={{ color: \"red\", cursor: 'pointer' }}\n            >{likeAction ? <>favorite</> : <>favorite_border</>}</i><span className=\"left\" style={{marginLeft:'-.7rem'}}>{likes}</span><br />\n               \n            </div>\n        )\n\n    }\n\n}\n\nexport default Like\n","/home/user/web/projects/A-mern-tube/client/src/main/components/Posts/All/Comments.js",[],"/home/user/web/projects/A-mern-tube/client/src/main/components/Posts/Follow/Follow.js",["113"],"import axios from 'axios'\nimport React, { useContext, useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport UserContext from '../../../contexts/UserContext'\nimport url from '../../../serverUrl'\nimport M from 'materialize-css'\nfunction Follow({ userTo, userFrom ,showInProfile,profile}) {\n\n    const [followers, setfollowers] = useState(0)\n    const [followed, setFollowed] = useState(false)\n    const history = useHistory()\n    const { userData } = useContext(UserContext)\n\n    useEffect(() => {\n\n        const GetFollowers = async () => {\n            try {\n                const getCount = await axios.post(`${url}/follow/count`, { userTo: userTo })\n                    setfollowers(getCount.data.followers.length)\n                    const followed = await axios.post(`${url}/follow/followed`, { userTo, userFrom: userFrom })\n                    setFollowed(followed.data.followed)\n                \n            } catch (error) {\n                console.log(error);\n            }\n\n        }\n        GetFollowers()\n    }, [])\n\n    const onFollow = async () => {\n    \n        if(userData.user._id !== userTo){\n            if (followed) {\n                \n\n            \n                const unfollow = await axios.post(`${url}/follow/unFollow`, { userTo }, {\n                    headers: { 'SHAHAL-USER_TOKEN': localStorage.getItem('USER_TOKEN') }\n                })\n    \n                if (unfollow.data.success) {\n                    setFollowed(false)\n                    setfollowers(followers - 1)\n                }\n    \n    \n            } else {\n    \n                const follow = await axios.post(`${url}/follow/follow`, { userTo }, {\n                    headers: { 'SHAHAL-USER_TOKEN': localStorage.getItem('USER_TOKEN') }\n                })\n    \n                if (follow.data.success) {\n                    setFollowed(true)\n                    setfollowers(followers + 1)\n    \n                }\n                \n    \n            }\n        }else{\n            return M.toast({html:\"Shahal, This profile is yours you can't follow yourself\",classes:'red'})\n        }\n        }\n        if(showInProfile){\n            return(\n                <React.Fragment>\n                    {followers} Followers\n                </React.Fragment>\n            )\n        }\n        if (userData.user) {\n            return (\n                <div>\n                    {profile ?\n                    <>\n                    {userTo === userData.user._id \n                    ? <>This is you</>\n                :\n                    <button onClick={onFollow} className={followed ? 'btn red waves-effect waves-light' : \"btn waves-effect waves-light\"}>\n                    {followed ? 'Followed' : 'Follow'}\n                </button>\n                }\n                </>\n                :\n\n                    <button onClick={onFollow} className={followed ? 'btn red waves-effect waves-light' : \"btn waves-effect waves-light\"}>\n                        {followers} {followed ? 'Followed' : 'Follow'}\n                    </button>\n                }\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                    {profile ?\n\n                    <button onClick={()=>history.push('/login')} className={followed ? 'btn red waves-effect waves-light' : \"btn waves-effect waves-light\"}>\n                    {followed ? 'Followed' : 'Follow'}\n                </button>\n                :\n\n                    <button onClick={()=>history.push('/login')} className={followed ? 'btn red waves-effect waves-light' : \"btn waves-effect waves-light\"}>\n                        {followers} {followed ? 'Followed' : 'Follow'}\n                    </button>\n                }\n                </div>\n            )\n        }\n    \n\n    \n\n}\n\nexport default Follow\n","/home/user/web/projects/A-mern-tube/client/src/main/components/Posts/All/SingleComment.js",["114"],"import React, { useContext } from \"react\";\nimport moment from \"moment\";\nimport Like from \"./Like\";\nimport UserContext from \"../../../contexts/UserContext\";\nimport axios from \"axios\";\nimport url from \"../../../serverUrl\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport M from \"materialize-css\";\n\nfunction SingleComment({ comment, postId }) {\n  const { userData } = useContext(UserContext);\n\n  const history = useHistory();\n\n  const RemoveMyComment = async () => {\n    const deleteComment = await axios.post(\n      `${url}/post/deleteComment`,\n      { commentId: comment._id },\n      {\n        headers: { \"SHAHAL-USER_TOKEN\": localStorage.getItem(\"USER_TOKEN\") },\n      },\n    );\n    M.toast({ html: \"Comment deleted\", classes: \"green\" });\n\n    history.push(\"/\");\n  };\n  return (\n\n      <li className=\"collection-item avatar\">\n        <img\n          src={comment.writer.image}\n          alt=\"avatar\"\n          className=\"circle\"\n        />\n        <span className=\"title\"><strong>{comment.writer.username}</strong></span>\n        <br />\n        <br />\n        \n        <span>\n          {comment.content}\n        </span>\n        <br/>\n        <br/>\n        <strong>{moment(comment.createdAt).fromNow()}</strong>\n        <Link to=\"#\" className=\"secondary-content\">\n        <Like comment commentId={comment._id} />\n        </Link>\n       \n        {userData.user && userData.user._id === comment.writer._id && (\n            <i  style={{ color: \"red\", cursor: 'pointer' }} className=\"material-icons right\" onClick={RemoveMyComment}>delete</i>\n           )}\n      </li>\n  );\n}\n\nexport default SingleComment;\n",["115","116"],"/home/user/web/projects/A-mern-tube/client/src/main/components/Profile/Details.js",["117","118"],"import React, { useContext, useEffect, useState } from \"react\";\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\nimport Follow from \"../Posts/Follow/Follow\";\nimport UserContext from \"../../contexts/UserContext\";\nimport Followings from \"../Posts/Follow/Followings\";\nimport axios from \"axios\";\nimport url from \"../../serverUrl\";\nimport M from 'materialize-css'\n\nfunction Details({ user, postLength }) {\n  const { userData } = useContext(UserContext);\n  const [ViewFollowings, setViewFollowings] = useState(false);\n  const [ViewFollowers, setViewFollowers] = useState(true);\n  const [followersNum, setFollowersNum] = useState(0);\n  const [followers, setFollowers] = useState(false);\n\n  const getFollowers = async () => {\n    if(userData.user._id !== user._id && user.privacy === 1){\n      return M.toast({html:\"This is a private account\"})\n    }\n  try {\n    setViewFollowings(false);\n    setViewFollowers(true);\n\n    const Followers = await axios.post(`${url}/follow/count`, {\n      userTo: user._id,\n    });\n    setFollowersNum(Followers.data.followers.length);\n    setFollowers(Followers.data.followers);\n  } catch (error) {\n    throw error;\n  \n}\n  };\n\n  return (\n    <div>\n      {userData.user._id !== user._id && (\n        <div className=\"right\">\n          <Follow post userTo={user._id} userFrom={userData.user._id} />\n        </div>\n      )}\n      {/**On Small */}\n      <img\n        src={user.image}\n        style={{ width: \"40rem\", height: \"21rem\" }}\n        alt=\"avatar\"\n        className=\"hide-on-med-and-up circle responsive-img\"\n      />\n      {/**On meduime */}\n      <div className=\"row\">\n        <div className=\"col s12 m4 l4\">\n          <br className=\"hide-on-large-only hide-on-small-only\" />\n          <br className=\"hide-on-large-only \" />\n          <img\n            src={user.image}\n            alt=\"avatar\"\n            style={{ width: \"40rem\", height: \"17rem\" }}\n            className=\"hide-on-large-only hide-on-small-only circle responsive-img\"\n          />\n          {/**On large */}\n          <br className=\" hide-on-small-only\" />\n          <br className=\" hide-on-small-only\" />\n          <img\n            src={user.image}\n            alt=\"avatar\"\n            style={{ width: \"18rem\", height: \"17rem\"}}\n            className=\"hide-on-med-only hide-on-small-only circle responsive-img\"\n          />\n        </div>\n        <div className=\"col s12 m7 l8\">\n          <br className=\"hide-on-large-only hide-on-small-only\" />\n          <br className=\"hide-on-large-only hide-on-small-only\" />\n          <br className=\"hide-on-med-and-down\" />\n          <ul className=\"collection with-header\">\n            <li className=\"collection-header\">\n              <h4>\n                <strong>Name: </strong>\n                {user.name}\n              </h4>\n            </li>\n            <li className=\"collection-item\">\n              <div>\n                <strong>Username: </strong> {user.username}\n              </div>\n            </li>\n            <li className=\"collection-item\">\n              <div>{postLength} Posts</div>\n            </li>\n\n            <li className=\"collection-item\">\n              <div>\n                <Follow\n                  userTo={user._id}\n                  userFrom={userData.user._id}\n                  showInProfile\n                />\n                <Link\n                  to=\"#\"\n                  className=\"secondary-content\"\n                  onClick={getFollowers}\n                >\n                  View\n                </Link>\n              </div>\n            </li>\n\n            <li className=\"collection-item\">\n              <div>\n                <Followings profile userId={user._id} />\n                <Link\n                  id=\"getFollowers\"\n                  onClick={() => {\n                    if(userData.user._id !== user._id && user.privacy === 1){\n                      return M.toast({html:\"This is a private account\"})\n                    }\n\n                      setViewFollowers(false);\n                      setViewFollowings(true);\n                    \n                  }}\n                  to=\"#\"\n                  className=\"secondary-content\"\n                >\n                  View\n                </Link>\n              </div>\n            </li>\n            {user.bio && (\n              <li className=\"collection-item\">\n                <div>\n                  <strong>Bio: </strong> {user.bio}\n                </div>\n              </li>\n            )}\n          </ul>\n        </div>\n      </div>\n     {user.privacy === 0 || user._id === userData.user._id ?\n    <>\n {ViewFollowings && <Followings profile view userId={user._id} />}\n      {ViewFollowers && (\n        <div>\n          <>\n            <blockquote>\n              <p>{followersNum} Followers</p>\n            </blockquote>\n            <table className=\"centered\">\n              <thead>\n                <tr>\n                  <th data-field=\"id\">Username</th>\n                  <th data-field=\"name\">Options</th>\n                </tr>\n              </thead>\n              <tbody>\n                {followers &&\n                  followers.map((follower) => (\n                    <tr>\n                      <td>\n                        <a\n                          className=\"a1\"\n                          href={`/profile/${follower.userFrom._id}`}\n                        >\n                          {follower.userFrom.username}\n                        </a>\n                      </td>\n                      <td>\n                        <Follow\n                        profile\n                          userTo={follower.userFrom._id}\n                          userFrom={userData.user._id}\n                        />\n                      </td>\n                    </tr>\n                  ))}\n              </tbody>\n            </table>\n          </>\n        </div>\n      )}\n    </> \n    :\n    <>\n    <blockquote>\n      <p>This is private account</p>\n    </blockquote>\n    </>\n    }\n    \n</div>\n\n\n   \n  );\n}\n\nexport default Details;\n","/home/user/web/projects/A-mern-tube/client/src/main/components/Profile/Edit.js",["119"],"import React, { useContext, useState } from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport M from \"materialize-css\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport url from \"../../serverUrl\";\nimport UserContext from \"../../contexts/UserContext\";\nfunction Edit({ user }) {\n  const [name, setName] = useState(user.name);\n  const [email, setEmail] = useState(user.email);\n  //   const [con_password, setConfirm_password] = useState(\"\");\n  //   const [password, setPassword] = useState(\"\");\n  const { setuserData,userData } = useContext(UserContext);\n  const [username, setUsername] = useState(user.username);\n  const [bio, setBio] = useState(user.bio);\n  const [PreviewFile, setPreviewFile] = useState(user.image);\n\n  const history = useHistory();\n  const onDrop = (e) => {\n    const file = e.target.files[0];\n    previewFile(file);\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (!PreviewFile) {\n      {\n        return;\n      }\n    }\n    update(PreviewFile);\n  };\n\n  const update = async (image) => {\n    try {\n      let reqBody = {\n        image,\n        name,\n        username,\n        bio,\n        email,\n        _id: user._id,\n      };\n      const token = localStorage.getItem(\"USER_TOKEN\");\n      const response = await axios.post(`${url}/user/update`, reqBody, {\n        headers: { \"SHAHAL-USER_TOKEN\": token },\n      });\n      setuserData({\n      token:userData.token,\n      user:response.data.user\n    })\n    M.toast({ html: \"Profile changes saved\", classes: \"green\" });\n\n      history.push(\"/\");\n    } catch (err) {\n    console.log(err);\n    }\n  };\n\n  const previewFile = (file) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onloadend = () => {\n      setPreviewFile(reader.result);\n    };\n  };\n\n  return (\n    <div style={{ marginTop: \"2rem\" }}>\n      <blockquote>\n        <p>Edit</p>\n      </blockquote>\n      <form onSubmit={onSubmit}>\n        <div className=\"input-field col s12 l6\">\n          <input\n            type=\"text\"\n            id=\"Name\"\n            value={name}\n            className=\"validate\"\n            onChange={(e) => setName(e.target.value)}\n            placeholder=\"Full Name\"\n          />\n        </div>\n        <div className=\"input-field col s12 l6\">\n          <input\n            type=\"text\"\n            id=\"username\"\n            value={username}\n            className=\"validate\"\n            onChange={(e) => setUsername(e.target.value)}\n            maxLength=\"19\"\n            placeholder=\"Username\"\n          />\n        </div>\n        <div className=\"input-field col s12\">\n          <input\n            type=\"email\"\n            id=\"email\"\n            className=\"validate\"\n            onChange={(e) => setEmail(e.target.value)}\n            value={email}\n            placeholder=\"Email\"\n          />\n        </div>\n        <blockquote>\n          <p>Bio</p>\n        </blockquote>\n        <div className=\"input-field col s12\">\n          <input\n            type=\"text\"\n            id=\"bio\"\n            className=\"validate\"\n            onChange={(e) => setBio(e.target.value)}\n            value={bio}\n            placeholder=\"Bio\"\n          />\n        </div>\n        <blockquote>\n          <p>Image</p>\n        </blockquote>\n\n        <div className=\"input-field col s12 l6\">\n          <Dropzone multiple={false} maxSize={80000000}>\n            {({ getRootProps, getInputProps }) => (\n              <div\n                style={{\n                  width: \"300px\",\n                  height: \"240px\",\n                  border: \"1px solid lightgray\",\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  background: \"white\",\n                  cursor: \"pointer\",\n                }}\n                {...getRootProps()}\n              >\n                <input\n                  {...getInputProps()}\n                  accept=\"image/*\"\n                  onChange={onDrop}\n                />\n\n                <i style={{ fontSize: \"40px\" }} className=\"material-icons\">\n                  add_a_photo\n                </i>\n              </div>\n            )}\n          </Dropzone>\n        </div>\n\n        {PreviewFile && (\n          <div className=\"card-image\">\n            <img\n              src={PreviewFile}\n              className=\"circle\"\n              style={{ height: \"19rem\", width: \"19rem\" }}\n              alt=\"choosen\"\n            />\n          </div>\n        )}\n\n        <button\n          onClick={onSubmit}\n          className=\"btn waves-effect waves-light\"\n          name=\"action\"\n        >\n          Save\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default Edit;\n","/home/user/web/projects/A-mern-tube/client/src/main/components/Profile/Posts.js",["120"],"import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport UserContext from \"../../contexts/UserContext\";\nimport Like from \"../Posts/All/Like\";\nimport Follow from \"../Posts/Follow/Follow\";\n\nfunction Posts({ posts, user }) {\n  const { userData } = useContext(UserContext);\n\n\n\n\n  if(posts.length < 1){\n    return (\n      <React.Fragment>\n      <div className=\"center\" style={{ marginTop: \"5rem\" }}>\n        {userData.user._id === user._id ?\n        <>\n        <h5>Nothing was uploaded</h5>\n        <Link to=\"/new\" className=\"btn\">Upload</Link>\n        </>\n        :\n        <h5>Nothing was uploaded</h5>\n      }\n      </div>\n    </React.Fragment>\n     )\n  }else{\n\n    return (\n      <div>\n        {userData.user._id !== user._id && (\n          <>\n            <div className=\"right\">\n              <Follow post userTo={user._id} userFrom={userData.user._id} />\n            </div>\n            <br />\n            <br />\n            <br />\n          </>\n        )}\n  \n        <div className=\"row\">\n          {posts.map((post) => (\n            <div className=\"col s12 m4 l4\">\n              <div className=\"card\">\n                <div className=\"card-image\">\n                  <img src={post.file} className=\"img-responsive\" />\n                </div>\n                <div className=\"card-action\">\n                  <Link to={`/post/${post._id}`}>View post</Link>\n                  <div className=\"right\">\n                    <Like post postId={post._id} />\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Posts;\n","/home/user/web/projects/A-mern-tube/client/src/main/contexts/LoadContext.js",[],"/home/user/web/projects/A-mern-tube/client/src/main/components/Posts/Follow/Followings.js",["121","122","123","124"],"import axios from \"axios\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport UserContext from \"../../../contexts/UserContext\";\nimport url from \"../../../serverUrl\";\nimport Follow from \"./Follow\";\n\nfunction Followings({ view, userId, profile }) {\n  const [followingsNum, setFollowingsNum] = useState(false);\n  const [followings, setFollowings] = useState(false);\n  const { userData } = useContext(UserContext);\n  useEffect(() => {\n    const getFollowings = async () => {\n      try {\n        const Followings = await axios.post(`${url}/follow/getFollowings`, {\n          userId,\n        });\n        if (Followings.data.success) {\n          setFollowingsNum(Followings.data.followings.length);\n          setFollowings(Followings.data.followings);\n        }\n      } catch (error) {\n        alert(\"Something went wrong...\");\n      }\n    };\n    getFollowings();\n  }, []);\n\n  if (view) {\n    return (\n      <React.Fragment>\n        {followingsNum && followings || followings !== false ? (\n          // If we get followings data\n          <div>\n            <blockquote>\n              <p>{followingsNum} Followings</p>\n            </blockquote>\n    \n              <table className=\"centered\">\n                <thead>\n                  <tr>\n                    <th data-field=\"id\">Username</th>\n                    <th data-field=\"name\">Options</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {followings && followings.map((following) => (\n                    <tr>\n                      <td>\n                        <a className=\"a1\" href={`/profile/${following.userTo._id}`}>\n                          {following.userTo.username}\n                        </a>\n                      </td>\n                      <td>\n                        <Follow\n                        profile\n                          userTo={following.userTo._id}\n                          userFrom={userData.user._id}\n                        />\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            \n          </div>\n        ) : (\n          //else\n          <div >\n          <div className=\"hide-on-med-and-down preloader-wrapper big active\" style={{ left: \"38rem\", top: '14rem' }}>\n\n              <div className=\"spinner-layer spinner-blue\">\n                  <div className=\"circle-clipper left\">\n                      <div className=\"circle\"></div>\n                  </div>\n                  <div className=\"gap-patch\">\n                      <div className=\"circle\"></div>\n                  </div>\n                  <div className=\"circle-clipper right\">\n                      <div className=\"circle\"></div>\n                  </div>\n              </div>\n\n              <div className=\"spinner-layer spinner-red\">\n                  <div className=\"circle-clipper left\">\n                      <div className=\"circle\"></div>\n                  </div>\n                  <div className=\"gap-patch\">\n                      <div className=\"circle\"></div>\n                  </div>\n                  <div className=\"circle-clipper right\">\n                      <div className=\"circle\"></div>\n                  </div>\n              </div>\n\n              <div className=\"spinner-layer spinner-yellow\">\n                  <div className=\"circle-clipper left\">\n                      <div className=\"circle\"></div>\n                  </div>\n                  <div className=\"gap-patch\">\n                      <div className=\"circle\"></div>\n                  </div>\n                  <div className=\"circle-clipper right\">\n                      <div className=\"circle\"></div>\n                  </div>\n              </div>\n\n              <div className=\"spinner-layer spinner-green\">\n                  <div className=\"circle-clipper left\">\n                      <div className=\"circle\"></div>\n                  </div>\n                  <div className=\"gap-patch\">\n                      <div className=\"circle\"></div>\n                  </div>\n                  <div className=\"circle-clipper right\">\n                      <div className=\"circle\"></div>\n                  </div>\n              </div>\n          </div>\n\n          {/** On Meduim */}\n          <div className=\"hide-on-large-only hide-on-small-only  preloader-wrapper big active\" style={{ left: \"24rem\", top: '14rem' }}>\n\n              <div className=\"spinner-layer spinner-blue\">\n                  <div className=\"circle-clipper left\">\n                      <div className=\"circle\"></div>\n                  </div>\n                  <div className=\"gap-patch\">\n                      <div className=\"circle\"></div>\n                  </div>\n                  <div className=\"circle-clipper right\">\n                      <div className=\"circle\"></div>\n                  </div>\n              </div>\n\n              <div className=\"spinner-layer spinner-red\">\n                  <div className=\"circle-clipper left\">\n                      <div className=\"circle\"></div>\n                  </div>\n                  <div className=\"gap-patch\">\n                      <div className=\"circle\"></div>\n                  </div>\n                  <div className=\"circle-clipper right\">\n                      <div className=\"circle\"></div>\n                  </div>\n              </div>\n\n              <div className=\"spinner-layer spinner-yellow\">\n                  <div className=\"circle-clipper left\">\n                      <div className=\"circle\"></div>\n                  </div>\n                  <div className=\"gap-patch\">\n                      <div className=\"circle\"></div>\n                  </div>\n                  <div className=\"circle-clipper right\">\n                      <div className=\"circle\"></div>\n                  </div>\n              </div>\n\n              <div className=\"spinner-layer spinner-green\">\n                  <div className=\"circle-clipper left\">\n                      <div className=\"circle\"></div>\n                  </div>\n                  <div className=\"gap-patch\">\n                      <div className=\"circle\"></div>\n                  </div>\n                  <div className=\"circle-clipper right\">\n                      <div className=\"circle\"></div>\n                  </div>\n              </div>\n          </div>\n\n\n          {/** On Small */}\n          <div className=\"hide-on-med-and-up preloader-wrapper big active\" style={{ left: \"9.1rem\", top: \"14rem\" }}>\n\n              <div className=\"spinner-layer spinner-blue\">\n                  <div className=\"circle-clipper left\">\n                      <div className=\"circle\"></div>\n                  </div>\n                  <div className=\"gap-patch\">\n                      <div className=\"circle\"></div>\n                  </div>\n                  <div className=\"circle-clipper right\">\n                      <div className=\"circle\"></div>\n                  </div>\n              </div>\n\n              <div className=\"spinner-layer spinner-red\">\n                  <div className=\"circle-clipper left\">\n                      <div className=\"circle\"></div>\n                  </div>\n                  <div className=\"gap-patch\">\n                      <div className=\"circle\"></div>\n                  </div>\n                  <div className=\"circle-clipper right\">\n                      <div className=\"circle\"></div>\n                  </div>\n              </div>\n\n              <div className=\"spinner-layer spinner-yellow\">\n                  <div className=\"circle-clipper left\">\n                      <div className=\"circle\"></div>\n                  </div>\n                  <div className=\"gap-patch\">\n                      <div className=\"circle\"></div>\n                  </div>\n                  <div className=\"circle-clipper right\">\n                      <div className=\"circle\"></div>\n                  </div>\n              </div>\n\n              <div className=\"spinner-layer spinner-green\">\n                  <div className=\"circle-clipper left\">\n                      <div className=\"circle\"></div>\n                  </div>\n                  <div className=\"gap-patch\">\n                      <div className=\"circle\"></div>\n                  </div>\n                  <div className=\"circle-clipper right\">\n                      <div className=\"circle\"></div>\n                  </div>\n              </div>\n          </div>\n\n      </div>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  if (profile) {\n    return <React.Fragment>{followingsNum} Followings</React.Fragment>;\n  }\n}\n\nexport default Followings;\n","/home/user/web/projects/A-mern-tube/client/src/main/components/Profile/Settings.js",["125"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport LoadContext from \"../../contexts/LoadContext\";\nimport UserContext from \"../../contexts/UserContext\";\nimport M from \"materialize-css\";\nimport axios from \"axios\";\nimport url from \"../../serverUrl\";\n\nfunction Settings() {\n  const { setLoad } = useContext(LoadContext);\n  const [privacy, setPrivacy] = useState(null);\n  const [viewAcc, setViewDeleteAcc] = useState(false);\n  const [key, setKey] = useState(false);\n\n  const [sure, setSure] = useState(\"\");\n  const [why, setWhy] = useState(\"\");\n\n  const history = useHistory();\n  const { setuserData, userData } = useContext(UserContext);\n\n  const DeleteAcc = async (e) => {\n    e.preventDefault();\n    if (sure === key) {\n      try {\n        if (!why) {\n          return M.toast({ html: \"Please add all fields\", classes: \"orange\" });\n        }\n        const reqBody = {\n          why,\n        }\n\n        await axios.post(`${url}/settings/deleteAcc`,reqBody,{\n          headers: { \"SHAHAL-USER_TOKEN\": localStorage.getItem(\"USER_TOKEN\") },\n        })\n\n        setuserData({\n          user: false,\n          token: false,\n        });\n    \n        localStorage.setItem(\"USER_TOKEN\", \"\");\n        M.toast({ html: \"Your account was deleted\", classes: \"green\" });\n        M.toast({ html: \"Shahal, I expect you will come with another account!\", classes: \"orange\" });\n        M.toast({ html: \"Shahal, Iam waiting...\", classes: \"green\" });\n        history.push(\"/\");\n        \n\n      } catch (error) {\n        alert('Something went wrong....')\n      }\n    } else {\n      return M.toast({ html: \"Wrong delete key\", classes: \"red\" });\n    }\n  };\n\n  const Private = async () => {\n    await axios.post(`${url}/settings/Setprivate`, null, {\n      headers: { \"SHAHAL-USER_TOKEN\": localStorage.getItem(\"USER_TOKEN\") },\n    });\n    setPrivacy(1);\n  };\n  const Public = async () => {\n    await axios.post(`${url}/settings/Setpublic`, null, {\n      headers: { \"SHAHAL-USER_TOKEN\": localStorage.getItem(\"USER_TOKEN\") },\n    });\n    setPrivacy(0);\n  };\n\n  const logout = () => {\n    setuserData({\n      user: false,\n      token: false,\n    });\n\n    localStorage.setItem(\"USER_TOKEN\", \"\");\n    M.toast({ html: \"You are now logged out\", classes: \"green\" });\n    M.toast({ html: \"Shahal, See you later !\", classes: \"green\" });\n    history.push(\"/\");\n  };\n\n  useEffect(() => {\n    if (userData.user === false || userData.user === null) {\n      setLoad(0);\n      return history.push(\"/login\");\n    }\n    const getSettings = async () => {\n      try {\n        const Privacy = await axios.post(`${url}/settings/privacy`, null, {\n          headers: { \"SHAHAL-USER_TOKEN\": localStorage.getItem(\"USER_TOKEN\") },\n        });\n        setPrivacy(Privacy.data.privacy);\n      } catch (error) {\n        alert(\"Something went wrong....\");\n      }\n    };\n    getSettings();\n    setLoad(100);\n  }, []);\n  if (privacy != null) {\n    return (\n      <div>\n        {/**Public or private */}\n        <blockquote>\n          <p>Privacy settings</p>\n        </blockquote>\n        <li className=\"flow-text\" style={{ fontSize: \"16px\" }}>\n          Public: Your whole profile will be public\n        </li>\n        <li className=\"flow-text\" style={{ fontSize: \"16px\" }}>\n          Private: Only you can see your posts\n        </li>\n        <br />\n        <button onClick={Private} className=\"btn\">\n          Private\n        </button>\n        <button onClick={Public} className=\"btn\" style={{ marginLeft: \"1rem\" }}>\n          Public\n        </button>\n        <span\n          className=\"flow-text\"\n          style={{ marginLeft: \"1rem\", fontSize: \"16px\" }}\n        >\n          <strong>Selected: </strong>\n          {privacy === 0 ? \"Public\" : \"Private\"}\n        </span>\n\n        <br />\n        <br />\n        <br />\n        <button className=\"btn\" onClick={logout}>\n          Logout\n        </button>\n        {/** Danger zone*/}\n        <blockquote>\n          <p>Delete account</p>\n        </blockquote>\n        <button\n          onClick={() => {\n            if (viewAcc) {\n              setViewDeleteAcc(false);\n            } else {\n              setKey(`@@${userData.user.username}@$!del*/$`);\n              setViewDeleteAcc(true);\n            }\n          }}\n          className=\"btn red\"\n        >\n          Delete account\n        </button>\n        <br />\n        <br />\n        {viewAcc && (\n          <form>\n            <div className=\"input-field col s12\">\n              <input\n                type=\"text\"\n                id=\"delete\"\n                onChange={(e) => setWhy(e.target.value)}\n                required\n                minLength=\"16\"\n              />\n              <label htmlFor=\"delete\" data-error=\"wrong\" data-success=\"right\">\n                What is the reason ?\n              </label>\n              <br />\n            </div>\n\n            <div className=\"input-field col s12\">\n             <p className=\"flow-text red-col\"><strong>Note: </strong> You can't backup your account when removed</p>\n            </div>\n\n            <p className=\"flow-text\">\n              <strong>Delete key: </strong>\n              {key}\n            </p>\n            <div className=\"input-field col s12\">\n              <input\n                type=\"text\"\n                id=\"sure\"\n                onChange={(e) => setSure(e.target.value)}\n                required\n                minLength=\"16\"\n              />\n\n              <label htmlFor=\"sure\" data-error=\"wrong\" data-success=\"right\">\n                Enter Delete key to confirm\n              </label>\n              <br />\n            </div>\n\n            <button onClick={DeleteAcc} className=\"btn red\">\n              Delete\n            </button>\n          </form>\n        )}\n      </div>\n    );\n  } else {\n    return (\n      <div >\n                <div className=\"hide-on-med-and-down preloader-wrapper big active\" style={{ left: \"38rem\", top: '14rem' }}>\n\n                    <div className=\"spinner-layer spinner-blue\">\n                        <div className=\"circle-clipper left\">\n                            <div className=\"circle\"></div>\n                        </div>\n                        <div className=\"gap-patch\">\n                            <div className=\"circle\"></div>\n                        </div>\n                        <div className=\"circle-clipper right\">\n                            <div className=\"circle\"></div>\n                        </div>\n                    </div>\n\n                    <div className=\"spinner-layer spinner-red\">\n                        <div className=\"circle-clipper left\">\n                            <div className=\"circle\"></div>\n                        </div>\n                        <div className=\"gap-patch\">\n                            <div className=\"circle\"></div>\n                        </div>\n                        <div className=\"circle-clipper right\">\n                            <div className=\"circle\"></div>\n                        </div>\n                    </div>\n\n                    <div className=\"spinner-layer spinner-yellow\">\n                        <div className=\"circle-clipper left\">\n                            <div className=\"circle\"></div>\n                        </div>\n                        <div className=\"gap-patch\">\n                            <div className=\"circle\"></div>\n                        </div>\n                        <div className=\"circle-clipper right\">\n                            <div className=\"circle\"></div>\n                        </div>\n                    </div>\n\n                    <div className=\"spinner-layer spinner-green\">\n                        <div className=\"circle-clipper left\">\n                            <div className=\"circle\"></div>\n                        </div>\n                        <div className=\"gap-patch\">\n                            <div className=\"circle\"></div>\n                        </div>\n                        <div className=\"circle-clipper right\">\n                            <div className=\"circle\"></div>\n                        </div>\n                    </div>\n                </div>\n\n                {/** On Meduim */}\n                <div className=\"hide-on-large-only hide-on-small-only  preloader-wrapper big active\" style={{ left: \"24rem\", top: '14rem' }}>\n\n                    <div className=\"spinner-layer spinner-blue\">\n                        <div className=\"circle-clipper left\">\n                            <div className=\"circle\"></div>\n                        </div>\n                        <div className=\"gap-patch\">\n                            <div className=\"circle\"></div>\n                        </div>\n                        <div className=\"circle-clipper right\">\n                            <div className=\"circle\"></div>\n                        </div>\n                    </div>\n\n                    <div className=\"spinner-layer spinner-red\">\n                        <div className=\"circle-clipper left\">\n                            <div className=\"circle\"></div>\n                        </div>\n                        <div className=\"gap-patch\">\n                            <div className=\"circle\"></div>\n                        </div>\n                        <div className=\"circle-clipper right\">\n                            <div className=\"circle\"></div>\n                        </div>\n                    </div>\n\n                    <div className=\"spinner-layer spinner-yellow\">\n                        <div className=\"circle-clipper left\">\n                            <div className=\"circle\"></div>\n                        </div>\n                        <div className=\"gap-patch\">\n                            <div className=\"circle\"></div>\n                        </div>\n                        <div className=\"circle-clipper right\">\n                            <div className=\"circle\"></div>\n                        </div>\n                    </div>\n\n                    <div className=\"spinner-layer spinner-green\">\n                        <div className=\"circle-clipper left\">\n                            <div className=\"circle\"></div>\n                        </div>\n                        <div className=\"gap-patch\">\n                            <div className=\"circle\"></div>\n                        </div>\n                        <div className=\"circle-clipper right\">\n                            <div className=\"circle\"></div>\n                        </div>\n                    </div>\n                </div>\n\n\n                {/** On Small */}\n                <div className=\"hide-on-med-and-up preloader-wrapper big active\" style={{ left: \"9.1rem\", top: \"14rem\" }}>\n\n                    <div className=\"spinner-layer spinner-blue\">\n                        <div className=\"circle-clipper left\">\n                            <div className=\"circle\"></div>\n                        </div>\n                        <div className=\"gap-patch\">\n                            <div className=\"circle\"></div>\n                        </div>\n                        <div className=\"circle-clipper right\">\n                            <div className=\"circle\"></div>\n                        </div>\n                    </div>\n\n                    <div className=\"spinner-layer spinner-red\">\n                        <div className=\"circle-clipper left\">\n                            <div className=\"circle\"></div>\n                        </div>\n                        <div className=\"gap-patch\">\n                            <div className=\"circle\"></div>\n                        </div>\n                        <div className=\"circle-clipper right\">\n                            <div className=\"circle\"></div>\n                        </div>\n                    </div>\n\n                    <div className=\"spinner-layer spinner-yellow\">\n                        <div className=\"circle-clipper left\">\n                            <div className=\"circle\"></div>\n                        </div>\n                        <div className=\"gap-patch\">\n                            <div className=\"circle\"></div>\n                        </div>\n                        <div className=\"circle-clipper right\">\n                            <div className=\"circle\"></div>\n                        </div>\n                    </div>\n\n                    <div className=\"spinner-layer spinner-green\">\n                        <div className=\"circle-clipper left\">\n                            <div className=\"circle\"></div>\n                        </div>\n                        <div className=\"gap-patch\">\n                            <div className=\"circle\"></div>\n                        </div>\n                        <div className=\"circle-clipper right\">\n                            <div className=\"circle\"></div>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n    );\n  }\n}\n\nexport default Settings;\n",{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":54,"column":6,"nodeType":"132","endLine":54,"endColumn":8,"suggestions":"133"},{"ruleId":"130","severity":1,"message":"131","line":46,"column":6,"nodeType":"132","endLine":46,"endColumn":8,"suggestions":"134"},{"ruleId":"135","severity":1,"message":"136","line":6,"column":8,"nodeType":"137","messageId":"138","endLine":6,"endColumn":14},{"ruleId":"135","severity":1,"message":"139","line":7,"column":8,"nodeType":"137","messageId":"138","endLine":7,"endColumn":9},{"ruleId":"130","severity":1,"message":"140","line":44,"column":6,"nodeType":"132","endLine":44,"endColumn":8,"suggestions":"141"},{"ruleId":"142","severity":1,"message":"143","line":81,"column":36,"nodeType":"144","messageId":"145","endLine":81,"endColumn":38},{"ruleId":"142","severity":1,"message":"143","line":81,"column":75,"nodeType":"144","messageId":"145","endLine":81,"endColumn":77},{"ruleId":"130","severity":1,"message":"131","line":16,"column":4,"nodeType":"132","endLine":16,"endColumn":6,"suggestions":"146"},{"ruleId":"147","severity":1,"message":"148","line":46,"column":46,"nodeType":"149","messageId":"150","endLine":46,"endColumn":48},{"ruleId":"130","severity":1,"message":"151","line":66,"column":7,"nodeType":"132","endLine":66,"endColumn":9,"suggestions":"152"},{"ruleId":"130","severity":1,"message":"153","line":29,"column":8,"nodeType":"132","endLine":29,"endColumn":10,"suggestions":"154"},{"ruleId":"135","severity":1,"message":"155","line":16,"column":11,"nodeType":"137","messageId":"138","endLine":16,"endColumn":24},{"ruleId":"126","replacedBy":"156"},{"ruleId":"128","replacedBy":"157"},{"ruleId":"135","severity":1,"message":"158","line":1,"column":29,"nodeType":"137","messageId":"138","endLine":1,"endColumn":38},{"ruleId":"135","severity":1,"message":"159","line":2,"column":8,"nodeType":"137","messageId":"138","endLine":2,"endColumn":14},{"ruleId":"160","severity":1,"message":"161","line":27,"column":7,"nodeType":"162","messageId":"163","endLine":29,"endColumn":8},{"ruleId":"164","severity":1,"message":"165","line":48,"column":19,"nodeType":"166","endLine":48,"endColumn":69},{"ruleId":"135","severity":1,"message":"167","line":3,"column":10,"nodeType":"137","messageId":"138","endLine":3,"endColumn":14},{"ruleId":"130","severity":1,"message":"168","line":27,"column":6,"nodeType":"132","endLine":27,"endColumn":8,"suggestions":"169"},{"ruleId":"142","severity":1,"message":"170","line":32,"column":24,"nodeType":"144","messageId":"145","endLine":32,"endColumn":26},{"ruleId":"142","severity":1,"message":"170","line":32,"column":38,"nodeType":"144","messageId":"145","endLine":32,"endColumn":40},{"ruleId":"130","severity":1,"message":"171","line":98,"column":6,"nodeType":"132","endLine":98,"endColumn":8,"suggestions":"172"},"no-native-reassign",["173"],"no-negated-in-lhs",["174"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'userData.user'. Either include them or remove the dependency array.","ArrayExpression",["175"],["176"],"no-unused-vars","'Follow' is defined but never used.","Identifier","unusedVar","'M' is defined but never used.","React Hook useEffect has missing dependencies: 'params.id' and 'userData.user._id'. Either include them or remove the dependency array.",["177"],"no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator",["178"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has missing dependencies: 'reqBody', 'setLoad', and 'userData.user._id'. Either include them or remove the dependency array.",["179"],"React Hook useEffect has missing dependencies: 'userFrom' and 'userTo'. Either include them or remove the dependency array.",["180"],"'deleteComment' is assigned a value but never used.",["173"],["174"],"'useEffect' is defined but never used.","'moment' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["181"],"Unexpected mix of '&&' and '||'.","React Hook useEffect has missing dependencies: 'history', 'setLoad', and 'userData.user'. Either include them or remove the dependency array.",["182"],"no-global-assign","no-unsafe-negation",{"desc":"183","fix":"184"},{"desc":"183","fix":"185"},{"desc":"186","fix":"187"},{"desc":"183","fix":"188"},{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},"Update the dependencies array to be: [history, userData.user]",{"range":"197","text":"198"},{"range":"199","text":"198"},"Update the dependencies array to be: [params.id, userData.user._id]",{"range":"200","text":"201"},{"range":"202","text":"198"},"Update the dependencies array to be: [reqBody, setLoad, userData.user._id]",{"range":"203","text":"204"},"Update the dependencies array to be: [userFrom, userTo]",{"range":"205","text":"206"},"Update the dependencies array to be: [userId]",{"range":"207","text":"208"},"Update the dependencies array to be: [history, setLoad, userData.user]",{"range":"209","text":"210"},[1628,1630],"[history, userData.user]",[1316,1318],[1267,1269],"[params.id, userData.user._id]",[523,525],[1586,1588],"[reqBody, setLoad, userData.user._id]",[1056,1058],"[userFrom, userTo]",[923,925],"[userId]",[2920,2922],"[history, setLoad, userData.user]"]